# Facsimile -- A Discrete-Event Simulation Library
# Copyright © 2004-2007, Michael J Allen.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the:
#
#   Free Software Foundation, Inc.
#   51 Franklin St, Fifth Floor
#   Boston, MA  02110-1301
#   USA
#
# The developers welcome all comments, suggestions and offers of assistance.
# For further information, please visit the project home page at:
#
#   http://www.facsim.org/
#
# Thank you for your interest in the Facsimile project!
#
# IMPORTANT NOTE: All patches (modifications to existing files and/or the
# addition of new files) submitted for inclusion as part of the official
# Facsimile code base, must comply with the published Facsimile Coding
# Standards.  If your code fails to comply with the standard, then your patches
# will be rejected.  For further information, please visit the coding standards
# at:
#
#   http://www.facsim.org/Documentation/CodingStandards/
#==============================================================================
# $Id$
#
# Java message bundle properties file for the org.facsim.Facsimile.Common
# package.
#==============================================================================
#
# Test messages.  These messages must not be translated and are required for
# successful execution of the test suite.  They should not be referenced except
# from within the test suite.
#
testMessage = Test message.
testCompoundMessage = Test compound message: {0}.
#
# Integer argument out of range compound message.  The first argument is the
# name of the function argument that is out of range.  The second is the range
# minimum value, the third is the range maximum value, and the last is the
# value of the named function argument.
#
intArgumentOutOfRange = Argument {0} out of range [{1,number,integer}, \
{2,number,integer}]: {3,number,integer}
#
# Counter increment overflow message.  The argument is the counter's limit.
#
counterIncrementOverflow = Attempt to increment Counter above its limit \
failed: {0,number,integer}
#
# Counter decrement overflow message.
#
counterDecrementOverflow = Attempt to decrement Counter below zero failed.
